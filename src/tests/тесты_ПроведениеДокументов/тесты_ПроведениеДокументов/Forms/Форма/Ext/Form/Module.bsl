#Область ОписаниеПеременных

&НаКлиенте
Перем КонтекстЯдра;
&НаКлиенте
Перем Утверждения;

#КонецОбласти

#Область ОсновныеПроцедурыТеста

&НаСервере
Функция КлючНастройки() Экспорт
	Возврат МодульОбъекта().КлючНастройки();
КонецФункции

&НаКлиенте
Процедура Инициализация(КонтекстЯдраПараметр) Экспорт
	КонтекстЯдра = КонтекстЯдраПараметр;
	Утверждения = КонтекстЯдра.Плагин("БазовыеУтверждения");
	
	ЗагрузитьНастройки();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаборТестов(НаборТестов, КонтекстЯдраПараметр) Экспорт
	
	Если ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Then
		Возврат;	
	КонецЕсли;
	
	КонтекстЯдра = КонтекстЯдраПараметр;
	
	ЗагрузитьНастройки();
	
	Если Не НужноВыполнятьТест() Тогда
		Возврат;
	КонецЕсли;
	
	ДобавитьДокументы(НаборТестов);
		
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДокументы(НаборТестов)
	
	ДокументыМета = СписокДокументов();
		
	Для Каждого СтрокаДок Из ДокументыМета Цикл
		
		НаборТестов.НачатьГруппу(СтрокаДок.Синоним + " - Документ."  + СтрокаДок.Имя);
		
		ПредставлениеТеста = "Проведение и проверка движений до и после - " + СтрокаДок.Имя;
		
		Для Каждого СтрокаДанные Из СтрокаДок.Данные Цикл
			
			ПараметрыТеста = НаборТестов.ПараметрыТеста(СтрокаДанные.Ссылка);
			ПредставлениеТеста = "Проведение и проверка движений до и после - " + СтрокаДанные.Представление;
			
			НаборТестов.Добавить("Тест_ПровестиДокумент", ПараметрыТеста, ПредставлениеТеста);	
			
		КонецЦикла;		
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПровестиДокумент(ДокументСсылка) Экспорт
	ПровестиДокумент(ДокументСсылка);
КонецПроцедуры

&НаКлиенте
Процедура Тест_ПропуститьПроведениеДокумента(Знач Сообщение) Экспорт
	Утверждения.ПропуститьТест(Сообщение);
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Настройки

&НаКлиенте
Процедура ЗагрузитьНастройки()
	Если ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат;
	КонецЕсли;

    ПлагинНастройки = КонтекстЯдра.Плагин("Настройки");
    ПлагинНастройки.Инициализация(КонтекстЯдра);
    
    Объект.Настройки = ПлагинНастройки.ПолучитьНастройку(КлючНастройки());
	
	НастройкиПоУмолчанию = НастройкиПоУмолчанию();
    Если ТипЗнч(Объект.Настройки) <> Тип("Структура") Then
        Объект.Настройки = НастройкиПоУмолчанию;
	Иначе
		ЗаполнитьЗначенияСвойств(НастройкиПоУмолчанию, Объект.Настройки);
        Объект.Настройки = НастройкиПоУмолчанию;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция НастройкиПоУмолчанию()
	
	Результат = Новый Структура;
	
	Результат.Вставить("Используется", Истина);
	Результат.Вставить("КоличествоДокументов", 10);
	Результат.Вставить("Исключения", Новый Массив);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция НужноВыполнятьТест()
	
	ЗагрузитьНастройки();
	
	Если Не ЗначениеЗаполнено(Объект.Настройки) Тогда
		Возврат Истина;
	КонецЕсли;
	
	КлючНастройки = КлючНастройки();
	
	ВыполнятьТест = Истина;
	Если ТипЗнч(Объект.Настройки) = Тип("Структура") 
		И Объект.Настройки.Свойство("Используется", ВыполнятьТест) Тогда

			Возврат ВыполнятьТест = Истина;	
	КонецЕсли;
	
	Возврат Истина;

КонецФункции

#КонецОбласти

&НаСервере
Функция СписокДокументов()
	Возврат МодульОбъекта().ДокументыМета();
КонецФункции

&НаСервере
Процедура ПровестиДокумент(ДокументСсылка)
	МодульОбъекта().Тест_ПровестиДокумент(ДокументСсылка); 	
КонецПроцедуры

&НаСервере
Функция МодульОбъекта()
	Возврат РеквизитФормыВЗначение("Объект");
КонецФункции

&НаКлиенте
Функция ДобавитьТестИсключениеЕслиЕстьВИсключаемойКоллекции(Знач ЧтоИщем, 
															Знач КоллекцияДляПоиска, 
															Знач Сообщение, 
															Знач НаборТестов)
			
	Если КонтекстЯдра.ЕстьВИсключаемойКоллекции(ЧтоИщем, КоллекцияДляПоиска) Тогда
		
		КонтекстЯдра.Отладка(Сообщение);
		ПараметрыТеста = НаборТестов.ПараметрыТеста(Сообщение);
		
		//НаборТестов.Добавить("Тест_ПропуститьМакетСКД", ПараметрыТеста, Сообщение);	
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти